import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public final class RiveraProd extends javax.swing.JFrame {
    private javax.swing.JTextField Id;

    public RiveraProd() throws SQLException {
        initComponents();
        Connect();
        LoadProductNo();
        Fetch();                   
       
    }

   Connection con; 
    PreparedStatement pst;
    ResultSet rs;
    
    public void Connect(){
        try { 
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/je", "root","boret12345");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(RiveraProd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void LoadProductNo (){
        try {
            pst = con.prepareStatement("SELECT id FROM jetable");
            rs = pst.executeQuery();
            txtpid.removeAllItems();
            while(rs.next()){
            txtpid.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(RiveraProd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
    
    private void Fetch(){
        try {
            int q;
            pst = con.prepareStatement("SELECT * FROM jetable");
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q = rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            df.setRowCount(0);
            while(rs.next()){
                Vector v2 = new Vector();
                for(int a=1; a<=q; a++){
                    v2.add(rs.getString("ID"));
                    v2.add(rs.getString("Product Name"));
                    v2.add(rs.getString("Price"));
                    v2.add(rs.getString("Qty"));
                }
                df.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(RiveraProd.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
            
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPname = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtpid = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtQty = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Product Name:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 86, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Product Price:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 126, -1, -1));

        txtPname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPnameActionPerformed(evt);
            }
        });
        getContentPane().add(txtPname, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 84, 169, -1));

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        getContentPane().add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 124, 169, -1));

        txtpid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtpid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpidActionPerformed(evt);
            }
        });
        getContentPane().add(txtpid, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 45, 155, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Choose ID");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(387, 47, -1, -1));

        btnSearch.setBackground(new java.awt.Color(255, 204, 204));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 89, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(" Inventory Management System ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, -1, -1));

        jTable1.setBackground(new java.awt.Color(255, 255, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Price", "Qty"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 258, 530, 290));
        getContentPane().add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 45, 169, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Product ID:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Product Qty:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 160, -1, -1));

        btnUpdate.setBackground(new java.awt.Color(204, 204, 255));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 87, -1));

        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        getContentPane().add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 158, 169, -1));

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, 87, -1));

        btnAdd.setBackground(new java.awt.Color(102, 255, 204));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 87, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalsnije/ai-generated-inventory-logistic-warehouse-background-photo.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 630));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void txtPnameActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void txtpidActionPerformed(java.awt.event.ActionEvent evt) {                                       
   

    }                                      

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {                                          

        try {
            Object selectedItem = txtpid.getSelectedItem();

        if (selectedItem == null) {
            JOptionPane.showMessageDialog(this, "No product selected", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
            String pid = txtpid.getSelectedItem().toString();
            
            pst = con.prepareStatement("SELECT * FROM jetable WHERE id=?");
            pst.setString(1,pid);
            rs=pst.executeQuery();
            
            if(rs.next()==true){
                txtid.setText(rs.getString("ID"));
                txtPname.setText(rs.getString("Product Name"));
                txtPrice.setText(rs.getString("Price"));
                txtQty.setText(rs.getString("Qty"));
                
            }else {
                JOptionPane.showMessageDialog(this, "No record found" );
            }
        } catch (SQLException ex) {
            Logger.getLogger(RiveraProd.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }                                         

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          

        try {
        Object selectedItem = txtpid.getSelectedItem();

        if (selectedItem == null) {
            JOptionPane.showMessageDialog(this, "No product selected", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String selectedPid = selectedItem.toString();  
        String newID = txtid.getText().trim();
        String pname = txtPname.getText().trim();
        String price = txtPrice.getText().trim();
        String qty = txtQty.getText().trim();

        if (newID.isEmpty() || pname.isEmpty() || price.isEmpty() || qty.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        PreparedStatement checkID = con.prepareStatement("SELECT * FROM jetable WHERE ID = ? AND ID != ?");
        checkID.setString(1, newID);
        checkID.setString(2, selectedPid);
        ResultSet rsID = checkID.executeQuery();
        if (rsID.next()) {
            JOptionPane.showMessageDialog(this, "Product ID already exists!", "Duplicate ID", JOptionPane.ERROR_MESSAGE);
            return;
        }

        PreparedStatement checkName = con.prepareStatement("SELECT * FROM jetable WHERE `Product Name` = ? AND ID != ?");
        checkName.setString(1, pname);
        checkName.setString(2, selectedPid);
        ResultSet rsName = checkName.executeQuery();
        if (rsName.next()) {
            JOptionPane.showMessageDialog(this, "Product Name already exists!", "Duplicate Name", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Update record using WHERE ID = selectedPid
        PreparedStatement pst = con.prepareStatement(
            "UPDATE jetable SET ID = ?, `Product Name` = ?, Price = ?, Qty = ? WHERE ID = ?"
        );
        pst.setString(1, newID);
        pst.setString(2, pname);
        pst.setString(3, price);
        pst.setString(4, qty);
        pst.setString(5, selectedPid); 
        
        int k = pst.executeUpdate();
        if (k == 1) {
            JOptionPane.showMessageDialog(this, "Record has been successfully updated!");
            txtid.setText("");
            txtPname.setText("");
            txtPrice.setText("");
            txtQty.setText("");
            txtPname.requestFocus();
            Fetch();
            LoadProductNo();
        }

    } catch (SQLException ex) {
        Logger.getLogger(RiveraProd.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
        
    }                                         

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {                                       
        if(txtid.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Product ID is required!!" );
        }else if(txtPname.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Product name is required!!" );
        }else if(txtPrice.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Product price is required!!" );
        }else if(txtQty.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Product qty is required!!" );
            
        }else{    
       
        try {
    String ID = txtid.getText();        
    String pname = txtPname.getText();
    String price = txtPrice.getText();
    String qty = txtQty.getText();

    try {
        PreparedStatement checkStmt = con.prepareStatement("SELECT * FROM jetable WHERE id = ?");
        checkStmt.setString(1, ID);
        ResultSet rs = checkStmt.executeQuery();

        if (rs.next()) {
            JOptionPane.showMessageDialog(this, "Product ID already exists!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        PreparedStatement checkName = con.prepareStatement("SELECT * FROM jetable WHERE `Product Name` = ?");
        checkName.setString(1, pname);
        ResultSet rsName = checkName.executeQuery();

        if (rsName.next()) {
            JOptionPane.showMessageDialog(this, "Product Name already exists!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        pst = con.prepareStatement("INSERT INTO jetable (ID,`Product Name`,Price,Qty)VALUES(?,?,?,?)");
        pst.setString(1, ID);
        pst.setString(2, pname);
        pst.setString(3, price);
        pst.setString(4, qty);

        int k = pst.executeUpdate();

        if (k == 1) {
            JOptionPane.showMessageDialog(this, "Record Added Successfully!!!");
            txtid.setText("");
            txtPname.setText("");
            txtPrice.setText("");
            txtQty.setText("");
            Fetch();
            LoadProductNo();
        } else {
            JOptionPane.showMessageDialog(this, "Record failed to save!!");
        }
    } catch (SQLException ex) {
        Logger.getLogger(RiveraProd.class.getName()).log(Level.SEVERE, null, ex);
    }
} catch (HeadlessException e) {
}
        }
    }                                      

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          

        try {
    Object selectedItem = txtpid.getSelectedItem();

    if (selectedItem == null || selectedItem.toString().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please select a valid product ID to delete.", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
    }

    String pid = selectedItem.toString();

    int confirm = JOptionPane.showConfirmDialog(this,
        "Are you sure you want to delete product ID " + pid + "?",
        "Confirm Deletion",
        JOptionPane.YES_NO_OPTION);

    if (confirm != JOptionPane.YES_OPTION) {
        return; 
    }

    pst = con.prepareStatement("DELETE FROM jetable WHERE id = ?");
    pst.setString(1, pid);

    int k = pst.executeUpdate();
    if (k == 1) {
        JOptionPane.showMessageDialog(this, "Record has been successfully deleted!");
        txtid.setText("");
        txtPname.setText("");
        txtPrice.setText("");
        txtQty.setText("");
        txtPname.requestFocus();
        Fetch();          
        LoadProductNo(); 
    } else {
        JOptionPane.showMessageDialog(this, "Record failed to delete!", "Error", JOptionPane.ERROR_MESSAGE);
    }
} catch (SQLException ex) {
    Logger.getLogger(RiveraProd.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {      
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bocadoprod.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        
        java.awt.EventQueue.invokeLater(() -> {
            new loginform().setVisible(true);
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtPname;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtid;
    private javax.swing.JComboBox<String> txtpid;
    // End of variables declaration                   

}
